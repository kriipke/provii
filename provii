#!/usr/bin/env bash

DEBUG=1

set -o pipefail
[ $DEBUG ] && set +x

# runs installation scripts in a new shell in a temporary folder

exit_trap () {
    local last_cmd="$BASH_COMMAND" exit_status=$?
    ERROR_MSG="Command [$last_cmd] exited with code [$exit_status]"
    err $ERROR_MSG
}
trap exit_trap ERR

print_usage () {
    echo "usage functionality not created yet!"
}

install() {
    PROVII_LOCATION="$( readlink -f $0 | xargs dirname )"
    if [ -z "$PV_DIR" ]; then
	if [ -r "${PV_DIR-$PROVII_LOCATION}/installs/$1" ]; then
	    PV_DIR="${PV_DIR-$PROVII_LOCATION}"
	    INSTALLER="$PV_DIR"/installs/$1
	else
	    err 'Either set the environment variable PV_DIR to 
		the correct dir or make sure the provii script
		is located in the dir containing installs/'
	fi
    fi

    if [ -f $PV_DIR/provii.conf ]; then
        . $PV_DIR/provii.conf
    fi

    if [ -f ${XDG_CONFIG_HOME-$HOME/.config}/provii.conf ]; then 
        . ${XDG_CONFIG_HOME-$HOME/.config}/provii.conf 
    fi 

    PROVII_CACHE=${XDG_CACHE_HOME-$HOME/.cache}
    mkdir -pm 0700 "$PROVII_CACHE"

    PROVII_LOG=${PROVII_LOG:-$PV_DIR/run.log}
    . $PV_DIR/lib/lib.sh

    if grep -i '^scope=\(sys\(tem\)?|user\)' $INSTALLER; then
	PV_SCOPE=$( awk -F= '/^scope/ { print $2 }' $INSTALLER )
    elif [ "$(id -u)" -eq "0" ]; then
	PV_UID=0
	PV_SCOPE=system
    else
	PV_UID=$(id -u)
	PV_SCOPE=user
    fi
    
    if [ "$PV_SCOPE" == system ]; then
        PV_UID=0
        PV_BIN=${SYS_BIN-/usr/local/bin}
        PV_CFG=${SYS_CFG-/etc}
        PV_SYSD=${SYS_SYSD-/etc/systemd/system}
    elif [ "$PV_SCOPE" = user ]; then
	PV_UID=$(id -u)
        PV_BIN=${USER_BIN-$HOME/.local/bin}
        PV_CFG=${USER_CFG-$HOME/.config}
        PV_SYSD=${USER_SYSD-$HOME/.config/systemd/user.control}
    else
        err 'scope of the installation could not be determined..'
    fi

    # format this to look nice and tabbed out with awks printf
    echo "bin: $( basename $INSTALLER )"
    echo "dest: $PV_BIN"

    mkdir -p $PV_{BIN,CFG,SYS}

    PV_TMP=$PROVII_CACHE/provii/$(basename $INSTALLER)
    mkdir -pm 0700 $PV_TMP \
	    && rm -rf $PV_TMP/* \
	    && cd $PV_TMP
	
	case *:$PATH:* in
		*:$PV_BIN:*)
			;;
		*) 
			[ -z $SUDO_USER ] && warn "$PV_BIN" temporarily added \
				to PATH, manually add it to your shell configuration
			;;
	esac

    /usr/bin/env - \
	PROVII_DIR="$PV_DIR" \
	PROVII_LOG="$PROVII_LOG" \
	PS4="$( echo $INSTALLER)" \
	ARCH="$( uname -m )" \
	BIN=$PV_BIN \
	CFG=$PV_CFG \
	SYSD=$PV_SYSD \
	INSTALLER=$INSTALLER \
	BASH_ENV="$PV_DIR"/lib/environment \
	bash ${DEBUG+-x} $INSTALLER

    log successfully installed
}

if [ -L "$0" ] && [ "$(basename $0)" == "iinst" ]
then
	for inst in $*; do
	    install $inst
	done
	exit 0
fi

PV_DIR=${PV_DIR- $(dirname $(readlink -e $0))}
subcommand="$1"; shift  # remove 'install' from argument list

case "$subcommand" in
    install )
        for inst in $*; do
		if [ inst = 'provii' ]; then
			#install_self
			echo "not implemented yet!"
		else
			install $inst
		fi
        done
        ;;
    ls )
	curl -sSL https://api.github.com/repos/l0xy/provii/contents/installs | jq -r '.[] | .name'
        ;;
    cat )
	curl -sSL https://api.github.com/repos/l0xy/provii/contents/installs | jq -r '.[] | select( .name | test("fd")) | .download_url' | xargs curl
        ;;
    -h | --help | -help | help )
        print_usage
        ;;
    summary)
	__show_summary $1
esac
